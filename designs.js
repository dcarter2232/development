const submitButton = $('#submitButton');
const height = $('#inputHeight');
const width = $('#inputWeight');
const colorPicker = $('#colorPicker');
const grid = $('#pixelCanvas');
const whiteColor = "rgb(255, 255, 255)"

submitButton.on('click', function(event){
  grid.addClass('table')
  grid.children().remove();
	event.preventDefault();
	makeGrid();

});

function makeGrid() {
	for (x = 0; x < height.val(); x++) {
      grid.append("<tr></tr>");
      for (y = 0; y < width.val(); y++) {
        grid.find($('tr:last')).append("<td id='whiteColor'></td>");
      }
    }
  grid.attr('td', whiteColor)
}
// extra parameters to toggle/change color with one click
grid.on('click', 'td', function(){
  if ($(this).css('background-color') !== hexToRgb(colorPicker.val())){
    $(this).css('background-color', colorPicker.val());
  } else {
         $(this).css('background-color', whiteColor)
  }
});
// to convert colorPicker.val() into the same type generated by $('element').css();
function hexToRgb(hex){
    var c;
    if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){
        c = hex.substring(1).split('');
        if(c.length === 3){
            c= [c[0], c[0], c[1], c[1], c[2], c[2]];
        }
        c = '0x'+c.join('');
        return 'rgb('+[(c>>16)&255, (c>>8)&255, c&255].join(', ')+')';
    }
    throw new Error('Bad Hex');
}
// previous and next characters in title change to the colorPicker color when hovered
$('span').mouseenter(function() {
  $(this).prev().css('color', colorPicker.val());
  $(this).next().css('color', colorPicker.val());
});

$('span').mouseleave(function() {
  $(this).prev().css('color', '');
  $(this).next().css('color', '');
});